{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst refs = {\n  startBtn: document.querySelector('[data-start]'),\n  dateTimeInput: document.querySelector('#datetime-picker'),\n  daysEl: document.querySelector('[data-days]'),\n  hoursEl: document.querySelector('[data-hours]'),\n  minutesEl: document.querySelector('[data-minutes]'),\n  secondsEl: document.querySelector('[data-seconds]'),\n};\n\nrefs.startBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      refs.startBtn.disabled = true;\n      iziToast.warning({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      userSelectedDate = selectedDate;\n      refs.startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(refs.dateTimeInput, options);\n\nrefs.startBtn.addEventListener('click', () => {\n  refs.startBtn.disabled = true;\n  refs.dateTimeInput.disabled = true;\n\n  timerId = setInterval(() => {\n    const delta = userSelectedDate - new Date();\n    if (delta <= 0) {\n      clearInterval(timerId);\n      updateClock({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      refs.dateTimeInput.disabled = false;\n      return;\n    }\n    const time = convertMs(delta);\n    updateClock(time);\n  }, 1000);\n});\n\nfunction updateClock({ days, hours, minutes, seconds }) {\n  refs.daysEl.textContent = addLeadingZero(days);\n  refs.hoursEl.textContent = addLeadingZero(hours);\n  refs.minutesEl.textContent = addLeadingZero(minutes);\n  refs.secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","timerId","refs","options","selectedDates","selectedDate","iziToast","flatpickr","delta","updateClock","time","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"+IAMA,IAAIA,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAO,CACX,SAAU,SAAS,cAAc,cAAc,EAC/C,cAAe,SAAS,cAAc,kBAAkB,EACxD,OAAQ,SAAS,cAAc,aAAa,EAC5C,QAAS,SAAS,cAAc,cAAc,EAC9C,UAAW,SAAS,cAAc,gBAAgB,EAClD,UAAW,SAAS,cAAc,gBAAgB,CACpD,EAEAA,EAAK,SAAS,SAAW,GAEzB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBH,EAAK,SAAS,SAAW,GACzBI,EAAS,QAAQ,CACf,QAAS,qCACT,SAAU,UAClB,CAAO,IAEDN,EAAmBK,EACnBH,EAAK,SAAS,SAAW,GAE5B,CACH,EAEAK,EAAUL,EAAK,cAAeC,CAAO,EAErCD,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CA,EAAK,SAAS,SAAW,GACzBA,EAAK,cAAc,SAAW,GAE9BD,EAAU,YAAY,IAAM,CAC1B,MAAMO,EAAQR,EAAmB,IAAI,KACrC,GAAIQ,GAAS,EAAG,CACd,cAAcP,CAAO,EACrBQ,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzDP,EAAK,cAAc,SAAW,GAC9B,MACD,CACD,MAAMQ,EAAOC,EAAUH,CAAK,EAC5BC,EAAYC,CAAI,CACjB,EAAE,GAAI,CACT,CAAC,EAED,SAASD,EAAY,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDb,EAAK,OAAO,YAAcc,EAAeJ,CAAI,EAC7CV,EAAK,QAAQ,YAAcc,EAAeH,CAAK,EAC/CX,EAAK,UAAU,YAAcc,EAAeF,CAAO,EACnDZ,EAAK,UAAU,YAAcc,EAAeD,CAAO,CACrD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}